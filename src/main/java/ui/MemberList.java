/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import auth.AuthenticationManager;
import business.LibraryMember;
import business.Role;
import controller.MemberController;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abenitrust
 */
public class MemberList extends javax.swing.JPanel implements Initializable{

    /**
     * Creates new form MemberListP
     */
    public MemberList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addNewMember = new javax.swing.JButton();
        memberListWrapper = new javax.swing.JScrollPane();
        memberListTable = new javax.swing.JTable();

        addNewMember.setText("Add Member");
        addNewMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewMemberActionPerformed(evt);
            }
        });

        memberListTable.setModel(initTable());
        memberListWrapper.setViewportView(memberListTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(memberListWrapper, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(addNewMember, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addNewMember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(memberListWrapper, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addNewMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewMemberActionPerformed
        JDialog jdl = new JDialog(getMainWindow(), "Dialog type", JDialog.ModalityType.DOCUMENT_MODAL);
        jdl.add(new AddNewMember());
        jdl.pack();
        jdl.setLocationRelativeTo(getMainWindow());
        jdl.show();
    }//GEN-LAST:event_addNewMemberActionPerformed
    
    private MainWindow getMainWindow() {
        return (MainWindow)SwingUtilities.getWindowAncestor(this);
    }
    
    public void updateTableWithNewMember(LibraryMember member) {
        DefaultTableModel model = (DefaultTableModel) memberListTable.getModel();
        model.addRow(new Object[]{member.getMemberId(), member.getFullName(), member.getRole()});
    }

    public DefaultTableModel initTable() {
        MemberController controller = MemberController.getInstance();
        String[] columnNames = {"Member ID", "FullName", "Role" };
        List<LibraryMember> members = controller.getLibraryMemberList(); 
        Object[][] data = new Object[members.size()][3];
        int rowCount = 0;

        for(LibraryMember member: members) {
            data[rowCount][0] = member.getMemberId();
            data[rowCount][1] = member.getFullName();
            data[rowCount][2] = member.getRole();
            rowCount++;
        }
        
        DefaultTableModel model = new DefaultTableModel(data, columnNames) {
            public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
            }
        };
        return model;
    }
    
    public void updateBtnVisiblityByRole() {
        Role memberRole = AuthenticationManager.INSTANCE.getUser().getRole();
        switch(memberRole) {
            case ADMIN:
                addNewMember.setVisible(true);
                break;
            case LIBRARIAN:
                addNewMember.setVisible(false);
                break;
            case BOTH:
                addNewMember.setVisible(true);
                break;
            default:
                break;
        }
    }
    
    public void onPanelVisible() {}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewMember;
    private javax.swing.JTable memberListTable;
    private javax.swing.JScrollPane memberListWrapper;
    // End of variables declaration//GEN-END:variables
}
