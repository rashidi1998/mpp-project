/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uimodels;

import businessmodels.CheckoutRecordEntry;
import auth.AuthManager;
import controller.CheckoutController;

import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;


public class CheckoutRecord extends javax.swing.JPanel implements Initializable {

    /**
     * Creates new form CheckoutRecord
     */
    public CheckoutRecord() {
        checkoutRecordMemberId = AuthManager.INSTANCE.getUser().getMemberId();
        initComponents();
    }
    
    public CheckoutRecord(String memberID) {
        this.checkoutRecordMemberId = memberID;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePane = new javax.swing.JScrollPane();
        checkoutRecordTable = new javax.swing.JTable();
        memberDetail = new javax.swing.JLabel();

        checkoutRecordTable.setModel(initTable());
        tablePane.setViewportView(checkoutRecordTable);

        memberDetail.setText("User");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablePane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memberDetail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(memberDetail)
                .addGap(18, 18, 18)
                .addComponent(tablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    
    public DefaultTableModel initTable() {
        CheckoutController controller = CheckoutController.getInstance();
        String[] columnNames = {"Title", "ISBN", "Due Date" };
        businessmodels.CheckoutRecord checkoutRecord = controller.getCheckoutRecord(
                checkoutRecordMemberId
        );
        
        Object[][] data = new Object[checkoutRecord.getCheckoutRecordEntry().size()][3];
        int rowCount = 0;

        for(CheckoutRecordEntry entry: checkoutRecord.getCheckoutRecordEntry()) {
            data[rowCount][0] = entry.getBook().getTitle();
            data[rowCount][1] = entry.getBook().getIsbn();
            data[rowCount][2] = entry.getDueDate();
            rowCount++;
        }
        
        DefaultTableModel model = new DefaultTableModel(data, columnNames) {
            public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
            }
        };
        return model;
    }
    
    private MainWindow getMainWindow() {
        return (MainWindow)SwingUtilities.getWindowAncestor(this);
    }
    
    public void onPanelVisible() {
        memberDetail.setText("Checkout Record for: " + AuthManager.INSTANCE.getUser().getFirstName());
    };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable checkoutRecordTable;
    private javax.swing.JLabel memberDetail;
    private javax.swing.JScrollPane tablePane;
    // End of variables declaration//GEN-END:variables

    private String checkoutRecordMemberId;
}
